from tqdm.notebook import tqdm
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.alert import Alert

url='https://www.kobis.or.kr/kobis/business/stat/boxs/findPeriodScreenTicketList.do'
driver=webdriver.Chrome(service=Service(ChromeDriverManager().install()))
driver.get(url)


# Define a function to wait for an element to be loaded
def wait_for_element(element_xpath, timeout=10):
    try:
        element = WebDriverWait(driver, timeout).until(
            EC.presence_of_element_located((By.XPATH, element_xpath))
        )
        return element
    except Exception as e:
        print(f"Error: {e}")
        return None

try:
    # Set start and end dates
    start_date = '2023-03-01'
    end_date = '2023-03-31'

    # Wait for and set the start date
    start_date_element_xpath = '//*[@id="startDate"]'
    start_date_element = wait_for_element(start_date_element_xpath)
    if start_date_element:
        start_date_element.clear()
        start_date_element.send_keys(start_date)
        start_date_element.send_keys(Keys.ENTER)

    # Wait for and set the end date
    end_date_element_xpath = '//*[@id="endDate"]'
    end_date_element = wait_for_element(end_date_element_xpath)
    if end_date_element:
        end_date_element.clear()
        end_date_element.send_keys(end_date)
        end_date_element.send_keys(Keys.ENTER)

    # Wait for and click the '조회' button
    search_button_xpath = '//*[@id="searchForm"]/div/div[4]/button'
    search_button = wait_for_element(search_button_xpath)
    if search_button:
        search_button.click()

    # Wait for and click the '엑셀 저장' button
    download_button_xpath = '//*[@id="content"]/div[3]/div/a'
    download_button = wait_for_element(download_button_xpath)
    if download_button:
        download_button.click()
        # Handle the '확인' alert
        da = Alert(driver)
        da.accept()

except Exception as e:
    print(f"Error: {e}")
